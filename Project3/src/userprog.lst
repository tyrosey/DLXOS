 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 59
    4                      ; Text size: 3504
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  75736572	.ascii "userprog.dlx.obj\000"
   12  00002004  70726f67	
   12  00002008  2e646c78	
   12  0000200c  2e6f626a	
   12  00002010  00      	
   13  00002011          	.align 2
   14  00002014          	LC1_LF0:
   15  00002014  25632564	.ascii "%c%d\n\000"
   15  00002018  0a00    	
   16  0000201a          	.align 2
   17  0000201c          	LC2_LF0:
   18  0000201c  55736167	.ascii "Usage: \000"
   18  00002020  653a2000	
   19  00002024          	.align 2
   20  00002024          	LC3_LF0:
   21  00002024  206e756d	.ascii " number\n\000"
   21  00002028  6265720a	
   21  0000202c  00      	
   22  0000202d          	.align 2
   23  00002030          	LC4_LF0:
   24  00002030  61726763	.ascii "argc = %d\n\000"
   24  00002034  203d2025	
   24  00002038  640a00  	
   25  0000203b          	.text
   26  00001000          	.align 2
   27  00001000          	.proc _main
   28  00001000          	.global _main
   29  00001000          	_main:
   30                      ;  Function 'main'; 32 bytes of locals, 0 regs to save.
   31  00001000  afbefffc	sw	-4(r29),r30; push fp
   32  00001004  001df020	add	r30,r0,r29; fp = sp
   33  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   34  0000100c  2fbd0028	subui	r29,r29,#40; alloc local storage
   35  00001010  8fc30000	lw	r3,(r30)
   36  00001014  8fc20004	lw	r2,4(r30)
   37  00001018  0c000d8c	jal	___main
   38  0000101c  54000000	nop; not filled.
   39  00001020  60610002	seqi	r1,r3,#2
   40  00001024  14200018	bnez	r1,L3_LF0
   41  00001028  54000000	nop; not filled.
   42  0000102c  60610003	seqi	r1,r3,#3
   43  00001030  102001f4	beqz	r1,L30_LF0
   44  00001034  54000000	nop; not filled.
   45  00001038  080000cc	j	L9_LF0
   46  0000103c  54000000	nop; not filled.
   47  00001040          	L3_LF0:
   48  00001040  23bdfff0	addi	r29,r29,#-16
   49  00001044  8c420004	lw	r2,4(r2)
   50  00001048  afa20000	sw	(r29),r2
   51  0000104c  20070000	addi	r7,r0,#0
   52  00001050  afa70004	sw	4(r29),r7
   53  00001054  2007000a	addi	r7,r0,#10
   54  00001058  afa70008	sw	8(r29),r7
   55  0000105c  0c000a5c	jal	_dstrtol
   56  00001060  54000000	nop; not filled.
   57  00001064  00012820	add	r5,r0,r1
   58  00001068  20070001	addi	r7,r0,#1
   59  0000106c  afa70000	sw	(r29),r7
   60  00001070  0c00029c	jal	_sem_create
   61  00001074  54000000	nop; not filled.
   62  00001078  afa10000	sw	(r29),r1
   63  0000107c  23c4ffd8	addi	r4,r30,#-40
   64  00001080  afa40004	sw	4(r29),r4
   65  00001084  0c000928	jal	_ditoa
   66  00001088  54000000	nop; not filled.
   67  0000108c  20020000	addi	r2,r0,#0
   68  00001090  23bd0010	addi	r29,r29,#16
   69  00001094  0045082a	slt	r1,r2,r5
   70  00001098  102001e8	beqz	r1,L2_LF0
   71  0000109c  54000000	nop; not filled.
   72  000010a0  23c3ffe8	addi	r3,r30,#-24
   73  000010a4          	L7_LF0:
   74  000010a4  23bdfff8	addi	r29,r29,#-8
   75  000010a8  afa20000	sw	(r29),r2
   76  000010ac  afa30004	sw	4(r29),r3
   77  000010b0  0c0008fc	jal	_ditoa
   78  000010b4  54000000	nop; not filled.
   79  000010b8  23bdfff0	addi	r29,r29,#-16
   80  000010bc  afa20000	sw	(r29),r2
   81  000010c0  20070000	addi	r7,r0,#0
   82  000010c4  afa70004	sw	4(r29),r7
   83  000010c8  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
   84  000010cc  24e72000	addui	r7,r7,(LC0_LF0)&0xffff
   85  000010d0  afa70008	sw	8(r29),r7
   86  000010d4  afa3000c	sw	12(r29),r3
   87  000010d8  afa40010	sw	16(r29),r4
   88  000010dc  20070000	addi	r7,r0,#0
   89  000010e0  afa70014	sw	20(r29),r7
   90  000010e4  0c000204	jal	_process_create
   91  000010e8  54000000	nop; not filled.
   92  000010ec  23bd0018	addi	r29,r29,#24
   93  000010f0  20420001	addi	r2,r2,#1
   94  000010f4  0045082a	slt	r1,r2,r5
   95  000010f8  10200188	beqz	r1,L2_LF0
   96  000010fc  54000000	nop; not filled.
   97  00001100  0bffffa0	j	L7_LF0
   98  00001104  54000000	nop; not filled.
   99  00001108          	L9_LF0:
  100  00001108  23bdfff0	addi	r29,r29,#-16
  101  0000110c  8c470004	lw	r7,4(r2)
  102  00001110  afa70000	sw	(r29),r7
  103  00001114  20070000	addi	r7,r0,#0
  104  00001118  afa70004	sw	4(r29),r7
  105  0000111c  2007000a	addi	r7,r0,#10
  106  00001120  afa70008	sw	8(r29),r7
  107  00001124  0c000994	jal	_dstrtol
  108  00001128  54000000	nop; not filled.
  109  0000112c  00013020	add	r6,r0,r1
  110  00001130  8c420008	lw	r2,8(r2)
  111  00001134  afa20000	sw	(r29),r2
  112  00001138  20070000	addi	r7,r0,#0
  113  0000113c  afa70004	sw	4(r29),r7
  114  00001140  2007000a	addi	r7,r0,#10
  115  00001144  afa70008	sw	8(r29),r7
  116  00001148  0c000970	jal	_dstrtol
  117  0000114c  54000000	nop; not filled.
  118  00001150  00011820	add	r3,r0,r1
  119  00001154  20020000	addi	r2,r0,#0
  120  00001158  23bd0010	addi	r29,r29,#16
  121  0000115c  2404c34f	addui	r4,r0,#49999
  122  00001160  20c50041	addi	r5,r6,#65
  123  00001164          	L13_LF0:
  124  00001164  201f0000	addi	r31,r0,#0
  125  00001168          	L16_LF0:
  126  00001168  23ff0001	addi	r31,r31,#1
  127  0000116c  03e4082c	sle	r1,r31,r4
  128  00001170  1420fff4	bnez	r1,L16_LF0
  129  00001174  54000000	nop; not filled.
  130  00001178  23bdfff0	addi	r29,r29,#-16
  131  0000117c  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  132  00001180  24e72014	addui	r7,r7,(LC1_LF0)&0xffff
  133  00001184  afa70000	sw	(r29),r7
  134  00001188  afa50004	sw	4(r29),r5
  135  0000118c  afa20008	sw	8(r29),r2
  136  00001190  0c000140	jal	_Printf
  137  00001194  54000000	nop; not filled.
  138  00001198  23bd0010	addi	r29,r29,#16
  139  0000119c  20420001	addi	r2,r2,#1
  140  000011a0  7041001d	slei	r1,r2,#29
  141  000011a4  1420ffbc	bnez	r1,L13_LF0
  142  000011a8  54000000	nop; not filled.
  143  000011ac  20020000	addi	r2,r0,#0
  144  000011b0  2404c34f	addui	r4,r0,#49999
  145  000011b4  20c50041	addi	r5,r6,#65
  146  000011b8          	L23_LF0:
  147  000011b8  23bdfff8	addi	r29,r29,#-8
  148  000011bc  afa30000	sw	(r29),r3
  149  000011c0  0c000158	jal	_sem_wait
  150  000011c4  54000000	nop; not filled.
  151  000011c8  201f0000	addi	r31,r0,#0
  152  000011cc  23bd0008	addi	r29,r29,#8
  153  000011d0          	L26_LF0:
  154  000011d0  23ff0001	addi	r31,r31,#1
  155  000011d4  03e4082c	sle	r1,r31,r4
  156  000011d8  1420fff4	bnez	r1,L26_LF0
  157  000011dc  54000000	nop; not filled.
  158  000011e0  23bdfff0	addi	r29,r29,#-16
  159  000011e4  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  160  000011e8  24e72014	addui	r7,r7,(LC1_LF0)&0xffff
  161  000011ec  afa70000	sw	(r29),r7
  162  000011f0  afa50004	sw	4(r29),r5
  163  000011f4  afa20008	sw	8(r29),r2
  164  000011f8  0c0000d8	jal	_Printf
  165  000011fc  54000000	nop; not filled.
  166  00001200  afa30000	sw	(r29),r3
  167  00001204  0c000120	jal	_sem_signal
  168  00001208  54000000	nop; not filled.
  169  0000120c  23bd0010	addi	r29,r29,#16
  170  00001210  20420001	addi	r2,r2,#1
  171  00001214  7041001d	slei	r1,r2,#29
  172  00001218  10200068	beqz	r1,L2_LF0
  173  0000121c  54000000	nop; not filled.
  174  00001220  0bffff94	j	L23_LF0
  175  00001224  54000000	nop; not filled.
  176  00001228          	L30_LF0:
  177  00001228  23bdfff8	addi	r29,r29,#-8
  178  0000122c  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  179  00001230  24e7201c	addui	r7,r7,(LC2_LF0)&0xffff
  180  00001234  afa70000	sw	(r29),r7
  181  00001238  0c000098	jal	_Printf
  182  0000123c  54000000	nop; not filled.
  183  00001240  8c420000	lw	r2,(r2)
  184  00001244  afa20000	sw	(r29),r2
  185  00001248  0c000088	jal	_Printf
  186  0000124c  54000000	nop; not filled.
  187  00001250  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  188  00001254  24e72024	addui	r7,r7,(LC3_LF0)&0xffff
  189  00001258  afa70000	sw	(r29),r7
  190  0000125c  0c000074	jal	_Printf
  191  00001260  54000000	nop; not filled.
  192  00001264  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  193  00001268  24e72030	addui	r7,r7,(LC4_LF0)&0xffff
  194  0000126c  afa70000	sw	(r29),r7
  195  00001270  afa30004	sw	4(r29),r3
  196  00001274  0c00005c	jal	_Printf
  197  00001278  54000000	nop; not filled.
  198  0000127c  0c000b1c	jal	_exit
  199  00001280  54000000	nop; not filled.
  200  00001284          	L2_LF0:
  201  00001284  0c000b14	jal	_exit
  202  00001288  54000000	nop
  203  0000128c          	.endproc _main
  204                      ;;;
  205                      ;;; Stub functions for DLX traps.
  206                      ;;;
  207                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  208                      ;;;
  209                      ;;; The traps such as Open and Close
  210                      ;;; (note the capital letters) are for use by user programs.  The traps
  211                      ;;; with names such as open and close (lower case) are for use by the OS.
  212                      ;;;
  215  0000128c          	.align 2
  217                      ;;; The following are the traps to be used by user-level programs
  218                      ;;;
  220  0000128c          	.align 2
  221  0000128c          	.proc _Open
  222  0000128c          	.global _Open
  223  0000128c          	_Open:
  224                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  225                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  226                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  227  0000128c  44000213	trap	#0x213
  228  00001290  4be00000	jr	r31
  229  00001294  54000000	nop
  230  00001298          	.endproc _Open
  232  00001298          	.proc _Close
  233  00001298          	.global _Close
  234  00001298          	_Close:
  235  00001298  44000214	trap	#0x214
  236  0000129c  4be00000	jr	r31
  237  000012a0  54000000	nop
  238  000012a4          	.endproc _Close
  240  000012a4          	.proc _Read
  241  000012a4          	.global _Read
  242  000012a4          	_Read:
  243  000012a4  44000210	trap	#0x210
  244  000012a8  4be00000	jr	r31
  245  000012ac  54000000	nop
  246  000012b0          	.endproc _Read
  248  000012b0          	.proc _Write
  249  000012b0          	.global _Write
  250  000012b0          	_Write:
  251  000012b0  44000211	trap	#0x211
  252  000012b4  4be00000	jr	r31
  253  000012b8  54000000	nop
  254  000012bc          	.endproc _Write
  256  000012bc          	.proc _Lseek
  257  000012bc          	.global _Lseek
  258  000012bc          	_Lseek:
  259  000012bc  44000212	trap	#0x212
  260  000012c0  4be00000	jr	r31
  261  000012c4  54000000	nop
  262  000012c8          	.endproc _Lseek
  264  000012c8          	.proc _Putchar
  265  000012c8          	.global _Putchar
  266  000012c8          	_Putchar:
  267  000012c8  44000280	trap	#0x280
  268  000012cc  4be00000	jr	r31
  269  000012d0  54000000	nop
  270  000012d4          	.endproc _Putchar
  272  000012d4          	.proc _Printf
  273  000012d4          	.global _Printf
  274  000012d4          	_Printf:
  275  000012d4  44000201	trap	#0x201
  276  000012d8  4be00000	jr	r31
  277  000012dc  54000000	nop
  278  000012e0          	.endproc _Printf
  280  000012e0          	.proc _getpid
  281  000012e0          	.global _getpid
  282  000012e0          	_getpid:
  283  000012e0  44000431	trap	#0x431
  284  000012e4  4be00000	jr	r31
  285  000012e8  54000000	nop
  286  000012ec          	.endproc _getpid
  289  000012ec          	.proc _process_create
  290  000012ec          	.global _process_create
  291  000012ec          	_process_create:
  292  000012ec  44000432	trap	#0x432
  293  000012f0  4be00000	jr	r31
  294  000012f4  54000000	nop
  295  000012f8          	.endproc _process_create
  297  000012f8          	.proc _shmget
  298  000012f8          	.global _shmget
  299  000012f8          	_shmget:
  300  000012f8  44000440	trap	#0x440
  301  000012fc  4be00000	jr	r31
  302  00001300  54000000	nop
  303  00001304          	.endproc _shmget
  305  00001304          	.proc _shmat
  306  00001304          	.global _shmat
  307  00001304          	_shmat:
  308  00001304  44000441	trap	#0x441
  309  00001308  4be00000	jr	r31
  310  0000130c  54000000	nop
  311  00001310          	.endproc _shmat
  313  00001310          	.proc _sem_create
  314  00001310          	.global _sem_create
  315  00001310          	_sem_create:
  316  00001310  44000450	trap	#0x450
  317  00001314  4be00000	jr	r31
  318  00001318  54000000	nop
  319  0000131c          	.endproc _sem_create
  321  0000131c          	.proc _sem_wait
  322  0000131c          	.global _sem_wait
  323  0000131c          	_sem_wait:
  324  0000131c  44000451	trap	#0x451
  325  00001320  4be00000	jr	r31
  326  00001324  54000000	nop
  327  00001328          	.endproc _sem_wait
  329  00001328          	.proc _sem_signal
  330  00001328          	.global _sem_signal
  331  00001328          	_sem_signal:
  332  00001328  44000452	trap	#0x452
  333  0000132c  4be00000	jr	r31
  334  00001330  54000000	nop
  335  00001334          	.endproc _sem_signal
  337  00001334          	.proc _lock_create
  338  00001334          	.global _lock_create
  339  00001334          	_lock_create:
  340  00001334  44000453	trap	#0x453
  341  00001338  4be00000	jr	r31
  342  0000133c  54000000	nop
  343  00001340          	.endproc _lock_create
  345  00001340          	.proc _lock_acquire
  346  00001340          	.global _lock_acquire
  347  00001340          	_lock_acquire:
  348  00001340  44000454	trap	#0x454
  349  00001344  4be00000	jr	r31
  350  00001348  54000000	nop
  351  0000134c          	.endproc _lock_acquire
  353  0000134c          	.proc _lock_release
  354  0000134c          	.global _lock_release
  355  0000134c          	_lock_release:
  356  0000134c  44000455	trap	#0x455
  357  00001350  4be00000	jr	r31
  358  00001354  54000000	nop
  359  00001358          	.endproc _lock_release
  361  00001358          	.proc _cond_create
  362  00001358          	.global _cond_create
  363  00001358          	_cond_create:
  364  00001358  44000456	trap	#0x456
  365  0000135c  4be00000	jr	r31
  366  00001360  54000000	nop
  367  00001364          	.endproc _cond_create
  369  00001364          	.proc _cond_wait
  370  00001364          	.global _cond_wait
  371  00001364          	_cond_wait:
  372  00001364  44000457	trap	#0x457
  373  00001368  4be00000	jr	r31
  374  0000136c  54000000	nop
  375  00001370          	.endproc _cond_wait
  377  00001370          	.proc _cond_signal
  378  00001370          	.global _cond_signal
  379  00001370          	_cond_signal:
  380  00001370  44000458	trap	#0x458
  381  00001374  4be00000	jr	r31
  382  00001378  54000000	nop
  383  0000137c          	.endproc _cond_signal
  385  0000137c          	.proc _cond_broadcast
  386  0000137c          	.global _cond_broadcast
  387  0000137c          	_cond_broadcast:
  388  0000137c  44000455	trap	#0x455
  389  00001380  4be00000	jr	r31
  390  00001384  54000000	nop
  391  00001388          	.endproc _cond_broadcast
  393  00001388          	.proc _TimerGet
  394  00001388          	.global _TimerGet
  395  00001388          	_TimerGet:
  396  00001388  44000050	trap	#0x50
  397  0000138c  4be00000	jr	r31
  398  00001390  54000000	nop
  399  00001394          	.endproc _TimerGet
  401  00001394          	.proc _yield
  402  00001394          	.global _yield
  403  00001394          	_yield:
  404  00001394  44000433	trap	#0x433
  405  00001398  4be00000	jr	r31
  406  0000139c  54000000	nop
  407  000013a0          	.endproc _yield
  408                      ; Compiled by GCC
  410  000013a0          	.align 2
  411  000013a0          	.proc _isspace
  412  000013a0          	.global _isspace
  413  000013a0          	_isspace:
  414                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  415  000013a0  afbefffc	sw	-4(r29),r30; push fp
  416  000013a4  001df020	add	r30,r0,r29; fp = sp
  417  000013a8  afbffff8	sw	-8(r29),r31; push ret addr
  418  000013ac  2fbd0010	subui	r29,r29,#16; alloc local storage
  419  000013b0  afa20000	sw	0(r29),r2
  420  000013b4  83c20003	lb	r2,3(r30)
  421  000013b8  201f0000	addi	r31,r0,#0
  422  000013bc  304100ff	andi	r1,r2,#0x00ff
  423  000013c0  60210020	seqi	r1,r1,#32
  424  000013c4  14200018	bnez	r1,L6_LF2
  425  000013c8  54000000	nop; not filled.
  426  000013cc  2041fff7	addi	r1,r2,#-9
  427  000013d0  302100ff	andi	r1,r1,#0x00ff
  428  000013d4  70210001	sleui	r1,r1,#1
  429  000013d8  10200008	beqz	r1,L5_LF2
  430  000013dc  54000000	nop; not filled.
  431  000013e0          	L6_LF2:
  432  000013e0  201f0001	addi	r31,r0,#1
  433  000013e4          	L5_LF2:
  434  000013e4  001f0820	add	r1,r0,r31
  435  000013e8  8fa20000	lw	r2,0(r29)
  436  000013ec  8fdffff8	lw	r31,-8(r30)
  437  000013f0  001ee820	add	r29,r0,r30
  438  000013f4  8fdefffc	lw	r30,-4(r30)
  439  000013f8  4be00000	jr	r31
  440  000013fc  54000000	nop
  441  00001400          	.endproc _isspace
  442  00001400          	.align 2
  443  00001400          	.proc _isxdigit
  444  00001400          	.global _isxdigit
  445  00001400          	_isxdigit:
  446                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  447  00001400  afbefffc	sw	-4(r29),r30; push fp
  448  00001404  001df020	add	r30,r0,r29; fp = sp
  449  00001408  afbffff8	sw	-8(r29),r31; push ret addr
  450  0000140c  2fbd0010	subui	r29,r29,#16; alloc local storage
  451  00001410  afa20000	sw	0(r29),r2
  452  00001414  83df0003	lb	r31,3(r30)
  453  00001418  20020000	addi	r2,r0,#0
  454  0000141c  23e1ffd0	addi	r1,r31,#-48
  455  00001420  302100ff	andi	r1,r1,#0x00ff
  456  00001424  70210009	sleui	r1,r1,#9
  457  00001428  14200028	bnez	r1,L12_LF2
  458  0000142c  54000000	nop; not filled.
  459  00001430  23e1ff9f	addi	r1,r31,#-97
  460  00001434  302100ff	andi	r1,r1,#0x00ff
  461  00001438  70210005	sleui	r1,r1,#5
  462  0000143c  14200014	bnez	r1,L12_LF2
  463  00001440  54000000	nop; not filled.
  464  00001444  33e100ff	andi	r1,r31,#0x00ff
  465  00001448  64210041	snei	r1,r1,#65
  466  0000144c  14200008	bnez	r1,L11_LF2
  467  00001450  54000000	nop; not filled.
  468  00001454          	L12_LF2:
  469  00001454  20020001	addi	r2,r0,#1
  470  00001458          	L11_LF2:
  471  00001458  00020820	add	r1,r0,r2
  472  0000145c  8fa20000	lw	r2,0(r29)
  473  00001460  8fdffff8	lw	r31,-8(r30)
  474  00001464  001ee820	add	r29,r0,r30
  475  00001468  8fdefffc	lw	r30,-4(r30)
  476  0000146c  4be00000	jr	r31
  477  00001470  54000000	nop
  478  00001474          	.endproc _isxdigit
  479  00001474          	.align 2
  480  00001474          	.proc _dstrcpy
  481  00001474          	.global _dstrcpy
  482  00001474          	_dstrcpy:
  483                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  484  00001474  afbefffc	sw	-4(r29),r30; push fp
  485  00001478  001df020	add	r30,r0,r29; fp = sp
  486  0000147c  afbffff8	sw	-8(r29),r31; push ret addr
  487  00001480  2fbd0010	subui	r29,r29,#16; alloc local storage
  488  00001484  afa20000	sw	0(r29),r2
  489  00001488  afa30004	sw	4(r29),r3
  490  0000148c  8fdf0000	lw	r31,(r30)
  491  00001490  8fc20004	lw	r2,4(r30)
  492  00001494  001f1820	add	r3,r0,r31
  493  00001498          	L19_LF2:
  494  00001498  80410000	lb	r1,(r2)
  495  0000149c  a3e10000	sb	(r31),r1
  496  000014a0  20420001	addi	r2,r2,#1
  497  000014a4  23ff0001	addi	r31,r31,#1
  498  000014a8  302100ff	andi	r1,r1,#0x00ff
  499  000014ac  64210000	snei	r1,r1,#0
  500  000014b0  1420ffe4	bnez	r1,L19_LF2
  501  000014b4  54000000	nop; not filled.
  502  000014b8  00030820	add	r1,r0,r3
  503  000014bc  8fa20000	lw	r2,0(r29)
  504  000014c0  8fa30004	lw	r3,4(r29)
  505  000014c4  8fdffff8	lw	r31,-8(r30)
  506  000014c8  001ee820	add	r29,r0,r30
  507  000014cc  8fdefffc	lw	r30,-4(r30)
  508  000014d0  4be00000	jr	r31
  509  000014d4  54000000	nop
  510  000014d8          	.endproc _dstrcpy
  511  000014d8          	.align 2
  512  000014d8          	.proc _dstrncpy
  513  000014d8          	.global _dstrncpy
  514  000014d8          	_dstrncpy:
  515                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  516  000014d8  afbefffc	sw	-4(r29),r30; push fp
  517  000014dc  001df020	add	r30,r0,r29; fp = sp
  518  000014e0  afbffff8	sw	-8(r29),r31; push ret addr
  519  000014e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  520  000014e8  afa20000	sw	0(r29),r2
  521  000014ec  afa30004	sw	4(r29),r3
  522  000014f0  afa40008	sw	8(r29),r4
  523  000014f4  8fc20000	lw	r2,(r30)
  524  000014f8  8fc30004	lw	r3,4(r30)
  525  000014fc  8fdf0008	lw	r31,8(r30)
  526  00001500  00022020	add	r4,r0,r2
  527  00001504  08000024	j	L37_LF2
  528  00001508  54000000	nop; not filled.
  529  0000150c          	L34_LF2:
  530  0000150c  80610000	lb	r1,(r3)
  531  00001510  a0410000	sb	(r2),r1
  532  00001514  20630001	addi	r3,r3,#1
  533  00001518  20420001	addi	r2,r2,#1
  534  0000151c  302100ff	andi	r1,r1,#0x00ff
  535  00001520  64210000	snei	r1,r1,#0
  536  00001524  10200018	beqz	r1,L32_LF2
  537  00001528  54000000	nop; not filled.
  538  0000152c          	L37_LF2:
  539  0000152c  001f0820	add	r1,r0,r31
  540  00001530  23ffffff	addi	r31,r31,#-1
  541  00001534  70210000	slei	r1,r1,#0
  542  00001538  1020ffd0	beqz	r1,L34_LF2
  543  0000153c  54000000	nop; not filled.
  544  00001540          	L32_LF2:
  545  00001540  00040820	add	r1,r0,r4
  546  00001544  8fa20000	lw	r2,0(r29)
  547  00001548  8fa30004	lw	r3,4(r29)
  548  0000154c  8fa40008	lw	r4,8(r29)
  549  00001550  8fdffff8	lw	r31,-8(r30)
  550  00001554  001ee820	add	r29,r0,r30
  551  00001558  8fdefffc	lw	r30,-4(r30)
  552  0000155c  4be00000	jr	r31
  553  00001560  54000000	nop
  554  00001564          	.endproc _dstrncpy
  555  00001564          	.align 2
  556  00001564          	.proc _dstrcat
  557  00001564          	.global _dstrcat
  558  00001564          	_dstrcat:
  559                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  560  00001564  afbefffc	sw	-4(r29),r30; push fp
  561  00001568  001df020	add	r30,r0,r29; fp = sp
  562  0000156c  afbffff8	sw	-8(r29),r31; push ret addr
  563  00001570  2fbd0010	subui	r29,r29,#16; alloc local storage
  564  00001574  afa20000	sw	0(r29),r2
  565  00001578  afa30004	sw	4(r29),r3
  566  0000157c  8fdf0000	lw	r31,(r30)
  567  00001580  001f1820	add	r3,r0,r31
  568  00001584  90610000	lbu	r1,(r3)
  569  00001588  64210000	snei	r1,r1,#0
  570  0000158c  10200018	beqz	r1,L50_LF2
  571  00001590  54000000	nop; not filled.
  572  00001594          	L51_LF2:
  573  00001594  23ff0001	addi	r31,r31,#1
  574  00001598  93e10000	lbu	r1,(r31)
  575  0000159c  64210000	snei	r1,r1,#0
  576  000015a0  1420fff0	bnez	r1,L51_LF2
  577  000015a4  54000000	nop; not filled.
  578  000015a8          	L50_LF2:
  579  000015a8  001f1020	add	r2,r0,r31
  580  000015ac  8fdf0004	lw	r31,4(r30)
  581  000015b0          	L54_LF2:
  582  000015b0  83e10000	lb	r1,(r31)
  583  000015b4  a0410000	sb	(r2),r1
  584  000015b8  23ff0001	addi	r31,r31,#1
  585  000015bc  20420001	addi	r2,r2,#1
  586  000015c0  302100ff	andi	r1,r1,#0x00ff
  587  000015c4  64210000	snei	r1,r1,#0
  588  000015c8  1420ffe4	bnez	r1,L54_LF2
  589  000015cc  54000000	nop; not filled.
  590  000015d0  00030820	add	r1,r0,r3
  591  000015d4  8fa20000	lw	r2,0(r29)
  592  000015d8  8fa30004	lw	r3,4(r29)
  593  000015dc  8fdffff8	lw	r31,-8(r30)
  594  000015e0  001ee820	add	r29,r0,r30
  595  000015e4  8fdefffc	lw	r30,-4(r30)
  596  000015e8  4be00000	jr	r31
  597  000015ec  54000000	nop
  598  000015f0          	.endproc _dstrcat
  599  000015f0          	.align 2
  600  000015f0          	.proc _dstrncmp
  601  000015f0          	.global _dstrncmp
  602  000015f0          	_dstrncmp:
  603                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  604  000015f0  afbefffc	sw	-4(r29),r30; push fp
  605  000015f4  001df020	add	r30,r0,r29; fp = sp
  606  000015f8  afbffff8	sw	-8(r29),r31; push ret addr
  607  000015fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  608  00001600  afa20000	sw	0(r29),r2
  609  00001604  afa30004	sw	4(r29),r3
  610  00001608  afa40008	sw	8(r29),r4
  611  0000160c  afa5000c	sw	12(r29),r5
  612  00001610  8fc30000	lw	r3,(r30)
  613  00001614  8fc40004	lw	r4,4(r30)
  614  00001618  8fc50008	lw	r5,8(r30)
  615  0000161c  20020000	addi	r2,r0,#0
  616  00001620  0045082a	slt	r1,r2,r5
  617  00001624  1020003c	beqz	r1,L73_LF2
  618  00001628  54000000	nop; not filled.
  619  0000162c          	L75_LF2:
  620  0000162c  909f0000	lbu	r31,(r4)
  621  00001630  67e10000	snei	r1,r31,#0
  622  00001634  10200038	beqz	r1,L86_LF2
  623  00001638  54000000	nop; not filled.
  624  0000163c  90610000	lbu	r1,(r3)
  625  00001640  003f0829	sne	r1,r1,r31
  626  00001644  1420001c	bnez	r1,L73_LF2
  627  00001648  54000000	nop; not filled.
  628  0000164c  20630001	addi	r3,r3,#1
  629  00001650  20840001	addi	r4,r4,#1
  630  00001654  20420001	addi	r2,r2,#1
  631  00001658  0045082a	slt	r1,r2,r5
  632  0000165c  1420ffcc	bnez	r1,L75_LF2
  633  00001660  54000000	nop; not filled.
  634  00001664          	L73_LF2:
  635  00001664  00450828	seq	r1,r2,r5
  636  00001668  10200010	beqz	r1,L80_LF2
  637  0000166c  54000000	nop; not filled.
  638  00001670          	L86_LF2:
  639  00001670  20010000	addi	r1,r0,#0
  640  00001674  08000028	j	L84_LF2
  641  00001678  54000000	nop; not filled.
  642  0000167c          	L80_LF2:
  643  0000167c  907f0000	lbu	r31,(r3)
  644  00001680  90830000	lbu	r3,(r4)
  645  00001684  03e30822	sub	r1,r31,r3
  646  00001688  74210000	sgei	r1,r1,#0
  647  0000168c  2002ffff	addi	r2,r0,#-1
  648  00001690  10200008	beqz	r1,L82_LF2
  649  00001694  54000000	nop; not filled.
  650  00001698  03e31029	sne	r2,r31,r3
  651  0000169c          	L82_LF2:
  652  0000169c  00020820	add	r1,r0,r2
  653  000016a0          	L84_LF2:
  654  000016a0  8fa20000	lw	r2,0(r29)
  655  000016a4  8fa30004	lw	r3,4(r29)
  656  000016a8  8fa40008	lw	r4,8(r29)
  657  000016ac  8fa5000c	lw	r5,12(r29)
  658  000016b0  8fdffff8	lw	r31,-8(r30)
  659  000016b4  001ee820	add	r29,r0,r30
  660  000016b8  8fdefffc	lw	r30,-4(r30)
  661  000016bc  4be00000	jr	r31
  662  000016c0  54000000	nop
  663  000016c4          	.endproc _dstrncmp
  664  000016c4          	.align 2
  665  000016c4          	.proc _dstrlen
  666  000016c4          	.global _dstrlen
  667  000016c4          	_dstrlen:
  668                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  669  000016c4  afbefffc	sw	-4(r29),r30; push fp
  670  000016c8  001df020	add	r30,r0,r29; fp = sp
  671  000016cc  afbffff8	sw	-8(r29),r31; push ret addr
  672  000016d0  2fbd0010	subui	r29,r29,#16; alloc local storage
  673  000016d4  afa20000	sw	0(r29),r2
  674  000016d8  8fdf0000	lw	r31,(r30)
  675  000016dc  20020000	addi	r2,r0,#0
  676  000016e0  08000008	j	L97_LF2
  677  000016e4  54000000	nop; not filled.
  678  000016e8          	L95_LF2:
  679  000016e8  20420001	addi	r2,r2,#1
  680  000016ec          	L97_LF2:
  681  000016ec  93e10000	lbu	r1,(r31)
  682  000016f0  23ff0001	addi	r31,r31,#1
  683  000016f4  64210000	snei	r1,r1,#0
  684  000016f8  1420ffec	bnez	r1,L95_LF2
  685  000016fc  54000000	nop; not filled.
  686  00001700  00020820	add	r1,r0,r2
  687  00001704  8fa20000	lw	r2,0(r29)
  688  00001708  8fdffff8	lw	r31,-8(r30)
  689  0000170c  001ee820	add	r29,r0,r30
  690  00001710  8fdefffc	lw	r30,-4(r30)
  691  00001714  4be00000	jr	r31
  692  00001718  54000000	nop
  693  0000171c          	.endproc _dstrlen
  694  0000171c          	.align 2
  695  0000171c          	.proc _dstrstr
  696  0000171c          	.global _dstrstr
  697  0000171c          	_dstrstr:
  698                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  699  0000171c  afbefffc	sw	-4(r29),r30; push fp
  700  00001720  001df020	add	r30,r0,r29; fp = sp
  701  00001724  afbffff8	sw	-8(r29),r31; push ret addr
  702  00001728  2fbd0020	subui	r29,r29,#32; alloc local storage
  703  0000172c  afa20000	sw	0(r29),r2
  704  00001730  afa30004	sw	4(r29),r3
  705  00001734  afa40008	sw	8(r29),r4
  706  00001738  afa5000c	sw	12(r29),r5
  707  0000173c  afa60010	sw	16(r29),r6
  708  00001740  afa70014	sw	20(r29),r7
  709  00001744  8fc50000	lw	r5,(r30)
  710  00001748  8fc70004	lw	r7,4(r30)
  711  0000174c  20030000	addi	r3,r0,#0
  712  00001750  90e10000	lbu	r1,(r7)
  713  00001754  20e20001	addi	r2,r7,#1
  714  00001758  64210000	snei	r1,r1,#0
  715  0000175c  1020001c	beqz	r1,L125_LF2
  716  00001760  54000000	nop; not filled.
  717  00001764          	L126_LF2:
  718  00001764  20630001	addi	r3,r3,#1
  719  00001768  90410000	lbu	r1,(r2)
  720  0000176c  20420001	addi	r2,r2,#1
  721  00001770  64210000	snei	r1,r1,#0
  722  00001774  1420ffec	bnez	r1,L126_LF2
  723  00001778  54000000	nop; not filled.
  724  0000177c          	L125_LF2:
  725  0000177c  00033020	add	r6,r0,r3
  726  00001780  080000ac	j	L149_LF2
  727  00001784  54000000	nop; not filled.
  728  00001788          	L130_LF2:
  729  00001788  00051820	add	r3,r0,r5
  730  0000178c  00072020	add	r4,r0,r7
  731  00001790  20020000	addi	r2,r0,#0
  732  00001794  0046082a	slt	r1,r2,r6
  733  00001798  1020003c	beqz	r1,L134_LF2
  734  0000179c  54000000	nop; not filled.
  735  000017a0          	L136_LF2:
  736  000017a0  909f0000	lbu	r31,(r4)
  737  000017a4  67e10000	snei	r1,r31,#0
  738  000017a8  10200038	beqz	r1,L150_LF2
  739  000017ac  54000000	nop; not filled.
  740  000017b0  90610000	lbu	r1,(r3)
  741  000017b4  003f0829	sne	r1,r1,r31
  742  000017b8  1420001c	bnez	r1,L134_LF2
  743  000017bc  54000000	nop; not filled.
  744  000017c0  20630001	addi	r3,r3,#1
  745  000017c4  20840001	addi	r4,r4,#1
  746  000017c8  20420001	addi	r2,r2,#1
  747  000017cc  0046082a	slt	r1,r2,r6
  748  000017d0  1420ffcc	bnez	r1,L136_LF2
  749  000017d4  54000000	nop; not filled.
  750  000017d8          	L134_LF2:
  751  000017d8  00460828	seq	r1,r2,r6
  752  000017dc  10200010	beqz	r1,L141_LF2
  753  000017e0  54000000	nop; not filled.
  754  000017e4          	L150_LF2:
  755  000017e4  20010000	addi	r1,r0,#0
  756  000017e8  08000028	j	L132_LF2
  757  000017ec  54000000	nop; not filled.
  758  000017f0          	L141_LF2:
  759  000017f0  90630000	lbu	r3,(r3)
  760  000017f4  90820000	lbu	r2,(r4)
  761  000017f8  00620822	sub	r1,r3,r2
  762  000017fc  74210000	sgei	r1,r1,#0
  763  00001800  201fffff	addi	r31,r0,#-1
  764  00001804  10200008	beqz	r1,L143_LF2
  765  00001808  54000000	nop; not filled.
  766  0000180c  0062f829	sne	r31,r3,r2
  767  00001810          	L143_LF2:
  768  00001810  001f0820	add	r1,r0,r31
  769  00001814          	L132_LF2:
  770  00001814  64210000	snei	r1,r1,#0
  771  00001818  14200010	bnez	r1,L131_LF2
  772  0000181c  54000000	nop; not filled.
  773  00001820  00050820	add	r1,r0,r5
  774  00001824  0800001c	j	L146_LF2
  775  00001828  54000000	nop; not filled.
  776  0000182c          	L131_LF2:
  777  0000182c  20a50001	addi	r5,r5,#1
  778  00001830          	L149_LF2:
  779  00001830  90a10000	lbu	r1,(r5)
  780  00001834  64210000	snei	r1,r1,#0
  781  00001838  1420ff4c	bnez	r1,L130_LF2
  782  0000183c  54000000	nop; not filled.
  783  00001840  20010000	addi	r1,r0,#0
  784  00001844          	L146_LF2:
  785  00001844  8fa20000	lw	r2,0(r29)
  786  00001848  8fa30004	lw	r3,4(r29)
  787  0000184c  8fa40008	lw	r4,8(r29)
  788  00001850  8fa5000c	lw	r5,12(r29)
  789  00001854  8fa60010	lw	r6,16(r29)
  790  00001858  8fa70014	lw	r7,20(r29)
  791  0000185c  8fdffff8	lw	r31,-8(r30)
  792  00001860  001ee820	add	r29,r0,r30
  793  00001864  8fdefffc	lw	r30,-4(r30)
  794  00001868  4be00000	jr	r31
  795  0000186c  54000000	nop
  796  00001870          	.endproc _dstrstr
  797  00001870          	.align 2
  798  00001870          	.proc _dmindex
  799  00001870          	.global _dmindex
  800  00001870          	_dmindex:
  801                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  802  00001870  afbefffc	sw	-4(r29),r30; push fp
  803  00001874  001df020	add	r30,r0,r29; fp = sp
  804  00001878  afbffff8	sw	-8(r29),r31; push ret addr
  805  0000187c  2fbd0020	subui	r29,r29,#32; alloc local storage
  806  00001880  afa20000	sw	0(r29),r2
  807  00001884  afa30004	sw	4(r29),r3
  808  00001888  afa40008	sw	8(r29),r4
  809  0000188c  afa5000c	sw	12(r29),r5
  810  00001890  afa60010	sw	16(r29),r6
  811  00001894  8fc40000	lw	r4,(r30)
  812  00001898  8fc60004	lw	r6,4(r30)
  813  0000189c  90810000	lbu	r1,(r4)
  814  000018a0  64210000	snei	r1,r1,#0
  815  000018a4  10200060	beqz	r1,L164_LF2
  816  000018a8  54000000	nop; not filled.
  817  000018ac  00012820	add	r5,r0,r1
  818  000018b0          	L165_LF2:
  819  000018b0  00061020	add	r2,r0,r6
  820  000018b4  80df0000	lb	r31,(r6)
  821  000018b8  33e100ff	andi	r1,r31,#0x00ff
  822  000018bc  64210000	snei	r1,r1,#0
  823  000018c0  1020003c	beqz	r1,L163_LF2
  824  000018c4  54000000	nop; not filled.
  825  000018c8  90830000	lbu	r3,(r4)
  826  000018cc          	L169_LF2:
  827  000018cc  33e100ff	andi	r1,r31,#0x00ff
  828  000018d0  00610828	seq	r1,r3,r1
  829  000018d4  10200010	beqz	r1,L168_LF2
  830  000018d8  54000000	nop; not filled.
  831  000018dc  00040820	add	r1,r0,r4
  832  000018e0  08000028	j	L173_LF2
  833  000018e4  54000000	nop; not filled.
  834  000018e8          	L168_LF2:
  835  000018e8  20420001	addi	r2,r2,#1
  836  000018ec  805f0000	lb	r31,(r2)
  837  000018f0  33e100ff	andi	r1,r31,#0x00ff
  838  000018f4  64210000	snei	r1,r1,#0
  839  000018f8  1420ffd0	bnez	r1,L169_LF2
  840  000018fc  54000000	nop; not filled.
  841  00001900          	L163_LF2:
  842  00001900  14a0ffac	bnez	r5,L165_LF2
  843  00001904  54000000	nop; not filled.
  844  00001908          	L164_LF2:
  845  00001908  20010000	addi	r1,r0,#0
  846  0000190c          	L173_LF2:
  847  0000190c  8fa20000	lw	r2,0(r29)
  848  00001910  8fa30004	lw	r3,4(r29)
  849  00001914  8fa40008	lw	r4,8(r29)
  850  00001918  8fa5000c	lw	r5,12(r29)
  851  0000191c  8fa60010	lw	r6,16(r29)
  852  00001920  8fdffff8	lw	r31,-8(r30)
  853  00001924  001ee820	add	r29,r0,r30
  854  00001928  8fdefffc	lw	r30,-4(r30)
  855  0000192c  4be00000	jr	r31
  856  00001930  54000000	nop
  857  00001934          	.endproc _dmindex
  858  00001934          	.align 2
  859  00001934          	.proc _dindex
  860  00001934          	.global _dindex
  861  00001934          	_dindex:
  862                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  863  00001934  afbefffc	sw	-4(r29),r30; push fp
  864  00001938  001df020	add	r30,r0,r29; fp = sp
  865  0000193c  afbffff8	sw	-8(r29),r31; push ret addr
  866  00001940  2fbd0010	subui	r29,r29,#16; alloc local storage
  867  00001944  afa20000	sw	0(r29),r2
  868  00001948  afa30004	sw	4(r29),r3
  869  0000194c  8fc20000	lw	r2,(r30)
  870  00001950  8fc30004	lw	r3,4(r30)
  871  00001954  08000024	j	L187_LF2
  872  00001958  54000000	nop; not filled.
  873  0000195c          	L183_LF2:
  874  0000195c  33e100ff	andi	r1,r31,#0x00ff
  875  00001960  00230828	seq	r1,r1,r3
  876  00001964  10200010	beqz	r1,L184_LF2
  877  00001968  54000000	nop; not filled.
  878  0000196c  00020820	add	r1,r0,r2
  879  00001970  08000020	j	L186_LF2
  880  00001974  54000000	nop; not filled.
  881  00001978          	L184_LF2:
  882  00001978  20420001	addi	r2,r2,#1
  883  0000197c          	L187_LF2:
  884  0000197c  805f0000	lb	r31,(r2)
  885  00001980  33e100ff	andi	r1,r31,#0x00ff
  886  00001984  64210000	snei	r1,r1,#0
  887  00001988  1420ffd0	bnez	r1,L183_LF2
  888  0000198c  54000000	nop; not filled.
  889  00001990  20010000	addi	r1,r0,#0
  890  00001994          	L186_LF2:
  891  00001994  8fa20000	lw	r2,0(r29)
  892  00001998  8fa30004	lw	r3,4(r29)
  893  0000199c  8fdffff8	lw	r31,-8(r30)
  894  000019a0  001ee820	add	r29,r0,r30
  895  000019a4  8fdefffc	lw	r30,-4(r30)
  896  000019a8  4be00000	jr	r31
  897  000019ac  54000000	nop
  898  000019b0          	.endproc _dindex
  899  000019b0          	.align 2
  900  000019b0          	.proc _ditoa
  901  000019b0          	.global _ditoa
  902  000019b0          	_ditoa:
  903                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  904  000019b0  afbefffc	sw	-4(r29),r30; push fp
  905  000019b4  001df020	add	r30,r0,r29; fp = sp
  906  000019b8  afbffff8	sw	-8(r29),r31; push ret addr
  907  000019bc  2fbd0020	subui	r29,r29,#32; alloc local storage
  908  000019c0  afa20000	sw	0(r29),r2
  909  000019c4  afa30004	sw	4(r29),r3
  910  000019c8  afa40008	sw	8(r29),r4
  911  000019cc  afa5000c	sw	12(r29),r5
  912  000019d0  afa60010	sw	16(r29),r6
  913  000019d4  8fc30000	lw	r3,(r30)
  914  000019d8  8fc40004	lw	r4,4(r30)
  915  000019dc  68610000	slti	r1,r3,#0
  916  000019e0  10200010	beqz	r1,L203_LF2
  917  000019e4  54000000	nop; not filled.
  918  000019e8  2006002d	addi	r6,r0,(#0x2d)&0xff
  919  000019ec  08000014	j	L216_LF2
  920  000019f0  54000000	nop; not filled.
  921  000019f4          	L203_LF2:
  922  000019f4  64610000	snei	r1,r3,#0
  923  000019f8  14200018	bnez	r1,L205_LF2
  924  000019fc  54000000	nop; not filled.
  925  00001a00  20060030	addi	r6,r0,(#0x30)&0xff
  926  00001a04          	L216_LF2:
  927  00001a04  a0860000	sb	(r4),r6
  928  00001a08  20840001	addi	r4,r4,#1
  929  00001a0c  0800007c	j	L204_LF2
  930  00001a10  54000000	nop; not filled.
  931  00001a14          	L205_LF2:
  932  00001a14  201f0001	addi	r31,r0,#1
  933  00001a18  03e3082c	sle	r1,r31,r3
  934  00001a1c  1020001c	beqz	r1,L208_LF2
  935  00001a20  54000000	nop; not filled.
  936  00001a24          	L209_LF2:
  937  00001a24  53e10002	slli	r1,r31,#0x2
  938  00001a28  003f0820	add	r1,r1,r31
  939  00001a2c  503f0001	slli	r31,r1,#0x1
  940  00001a30  03e3082c	sle	r1,r31,r3
  941  00001a34  1420ffec	bnez	r1,L209_LF2
  942  00001a38  54000000	nop; not filled.
  943  00001a3c          	L208_LF2:
  944  00001a3c  2005000a	addi	r5,r0,#10
  945  00001a40          	L212_LF2:
  946  00001a40  03e00035	movi2fp	f0,r31
  947  00001a44  00a00835	movi2fp	f1,r5
  948  00001a48  0401000f	div	f0,f0,f1
  949  00001a4c  0000f834	movfp2i	r31,f0
  950  00001a50  00600035	movi2fp	f0,r3
  951  00001a54  03e00835	movi2fp	f1,r31
  952  00001a58  0401000f	div	f0,f0,f1
  953  00001a5c  00001034	movfp2i	r2,f0
  954  00001a60  20410030	addi	r1,r2,#48
  955  00001a64  a0810000	sb	(r4),r1
  956  00001a68  20840001	addi	r4,r4,#1
  957  00001a6c  00400035	movi2fp	f0,r2
  958  00001a70  03e00835	movi2fp	f1,r31
  959  00001a74  0401000e	mult	f0,f0,f1
  960  00001a78  00000834	movfp2i	r1,f0
  961  00001a7c  00611822	sub	r3,r3,r1
  962  00001a80  6fe10001	sgti	r1,r31,#1
  963  00001a84  1420ffb8	bnez	r1,L212_LF2
  964  00001a88  54000000	nop; not filled.
  965  00001a8c          	L204_LF2:
  966  00001a8c  20060000	addi	r6,r0,(#0x0)&0xff
  967  00001a90  a0860000	sb	(r4),r6
  968  00001a94  8fa20000	lw	r2,0(r29)
  969  00001a98  8fa30004	lw	r3,4(r29)
  970  00001a9c  8fa40008	lw	r4,8(r29)
  971  00001aa0  8fa5000c	lw	r5,12(r29)
  972  00001aa4  8fa60010	lw	r6,16(r29)
  973  00001aa8  8fdffff8	lw	r31,-8(r30)
  974  00001aac  001ee820	add	r29,r0,r30
  975  00001ab0  8fdefffc	lw	r30,-4(r30)
  976  00001ab4  4be00000	jr	r31
  977  00001ab8  54000000	nop
  978  00001abc          	.endproc _ditoa
  979  00001abc          	.align 2
  980  00001abc          	.proc _dstrtol
  981  00001abc          	.global _dstrtol
  982  00001abc          	_dstrtol:
  983                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  984  00001abc  afbefffc	sw	-4(r29),r30; push fp
  985  00001ac0  001df020	add	r30,r0,r29; fp = sp
  986  00001ac4  afbffff8	sw	-8(r29),r31; push ret addr
  987  00001ac8  2fbd0020	subui	r29,r29,#32; alloc local storage
  988  00001acc  afa20000	sw	0(r29),r2
  989  00001ad0  afa30004	sw	4(r29),r3
  990  00001ad4  afa40008	sw	8(r29),r4
  991  00001ad8  afa5000c	sw	12(r29),r5
  992  00001adc  afa60010	sw	16(r29),r6
  993  00001ae0  8fc20000	lw	r2,(r30)
  994  00001ae4  8fc50004	lw	r5,4(r30)
  995  00001ae8  8fc40008	lw	r4,8(r30)
  996  00001aec  20030000	addi	r3,r0,#0
  997  00001af0  08000008	j	L247_LF2
  998  00001af4  54000000	nop; not filled.
  999  00001af8          	L220_LF2:
 1000  00001af8  20420001	addi	r2,r2,#1
 1001  00001afc          	L247_LF2:
 1002  00001afc  805f0000	lb	r31,(r2)
 1003  00001b00  33e100ff	andi	r1,r31,#0x00ff
 1004  00001b04  60210020	seqi	r1,r1,#32
 1005  00001b08  1420ffec	bnez	r1,L220_LF2
 1006  00001b0c  54000000	nop; not filled.
 1007  00001b10  23e1fff7	addi	r1,r31,#-9
 1008  00001b14  302100ff	andi	r1,r1,#0x00ff
 1009  00001b18  70210001	sleui	r1,r1,#1
 1010  00001b1c  1420ffd8	bnez	r1,L220_LF2
 1011  00001b20  54000000	nop; not filled.
 1012  00001b24  64a10000	snei	r1,r5,#0
 1013  00001b28  10200008	beqz	r1,L222_LF2
 1014  00001b2c  54000000	nop; not filled.
 1015  00001b30  aca20000	sw	(r5),r2
 1016  00001b34          	L222_LF2:
 1017  00001b34  905f0000	lbu	r31,(r2)
 1018  00001b38  67e10000	snei	r1,r31,#0
 1019  00001b3c  10200090	beqz	r1,L248_LF2
 1020  00001b40  54000000	nop; not filled.
 1021  00001b44  63e1002d	seqi	r1,r31,#45
 1022  00001b48  10200014	beqz	r1,L224_LF2
 1023  00001b4c  54000000	nop; not filled.
 1024  00001b50  2006ffff	addi	r6,r0,#-1
 1025  00001b54  20420001	addi	r2,r2,#1
 1026  00001b58  08000008	j	L225_LF2
 1027  00001b5c  54000000	nop; not filled.
 1028  00001b60          	L224_LF2:
 1029  00001b60  20060001	addi	r6,r0,#1
 1030  00001b64          	L225_LF2:
 1031  00001b64  64810000	snei	r1,r4,#0
 1032  00001b68  14200054	bnez	r1,L226_LF2
 1033  00001b6c  54000000	nop; not filled.
 1034  00001b70  90410000	lbu	r1,(r2)
 1035  00001b74  60210030	seqi	r1,r1,#48
 1036  00001b78  10200040	beqz	r1,L227_LF2
 1037  00001b7c  54000000	nop; not filled.
 1038  00001b80  20420001	addi	r2,r2,#1
 1039  00001b84  905f0000	lbu	r31,(r2)
 1040  00001b88  63e10078	seqi	r1,r31,#120
 1041  00001b8c  14200010	bnez	r1,L229_LF2
 1042  00001b90  54000000	nop; not filled.
 1043  00001b94  63e10058	seqi	r1,r31,#88
 1044  00001b98  10200014	beqz	r1,L228_LF2
 1045  00001b9c  54000000	nop; not filled.
 1046  00001ba0          	L229_LF2:
 1047  00001ba0  20040010	addi	r4,r0,#16
 1048  00001ba4  20420001	addi	r2,r2,#1
 1049  00001ba8  08000014	j	L226_LF2
 1050  00001bac  54000000	nop; not filled.
 1051  00001bb0          	L228_LF2:
 1052  00001bb0  20040008	addi	r4,r0,#8
 1053  00001bb4  08000008	j	L226_LF2
 1054  00001bb8  54000000	nop; not filled.
 1055  00001bbc          	L227_LF2:
 1056  00001bbc  2004000a	addi	r4,r0,#10
 1057  00001bc0          	L226_LF2:
 1058  00001bc0  2081ffff	addi	r1,r4,#-1
 1059  00001bc4  6c21000f	sgtui	r1,r1,#15
 1060  00001bc8  10200010	beqz	r1,L233_LF2
 1061  00001bcc  54000000	nop; not filled.
 1062  00001bd0          	L248_LF2:
 1063  00001bd0  00030820	add	r1,r0,r3
 1064  00001bd4  080000c4	j	L245_LF2
 1065  00001bd8  54000000	nop; not filled.
 1066  00001bdc          	L233_LF2:
 1067  00001bdc  805f0000	lb	r31,(r2)
 1068  00001be0  23e1ffd0	addi	r1,r31,#-48
 1069  00001be4  302100ff	andi	r1,r1,#0x00ff
 1070  00001be8  70210009	sleui	r1,r1,#9
 1071  00001bec  10200014	beqz	r1,L236_LF2
 1072  00001bf0  54000000	nop; not filled.
 1073  00001bf4  33e100ff	andi	r1,r31,#0x00ff
 1074  00001bf8  2021ffd0	addi	r1,r1,#-48
 1075  00001bfc  08000050	j	L237_LF2
 1076  00001c00  54000000	nop; not filled.
 1077  00001c04          	L236_LF2:
 1078  00001c04  23e1ff9f	addi	r1,r31,#-97
 1079  00001c08  302100ff	andi	r1,r1,#0x00ff
 1080  00001c0c  70210019	sleui	r1,r1,#25
 1081  00001c10  10200014	beqz	r1,L238_LF2
 1082  00001c14  54000000	nop; not filled.
 1083  00001c18  33e100ff	andi	r1,r31,#0x00ff
 1084  00001c1c  2021ffa9	addi	r1,r1,#-87
 1085  00001c20  0800002c	j	L237_LF2
 1086  00001c24  54000000	nop; not filled.
 1087  00001c28          	L238_LF2:
 1088  00001c28  23e1ffbf	addi	r1,r31,#-65
 1089  00001c2c  302100ff	andi	r1,r1,#0x00ff
 1090  00001c30  70210019	sleui	r1,r1,#25
 1091  00001c34  10200014	beqz	r1,L240_LF2
 1092  00001c38  54000000	nop; not filled.
 1093  00001c3c  33e100ff	andi	r1,r31,#0x00ff
 1094  00001c40  2021ffc9	addi	r1,r1,#-55
 1095  00001c44  08000008	j	L237_LF2
 1096  00001c48  54000000	nop; not filled.
 1097  00001c4c          	L240_LF2:
 1098  00001c4c  200103e8	addi	r1,r0,#1000
 1099  00001c50          	L237_LF2:
 1100  00001c50  0024f82a	slt	r31,r1,r4
 1101  00001c54  13e00024	beqz	r31,L246_LF2
 1102  00001c58  54000000	nop; not filled.
 1103  00001c5c  00600035	movi2fp	f0,r3
 1104  00001c60  00800835	movi2fp	f1,r4
 1105  00001c64  0401000e	mult	f0,f0,f1
 1106  00001c68  00001834	movfp2i	r3,f0
 1107  00001c6c  00611820	add	r3,r3,r1
 1108  00001c70  20420001	addi	r2,r2,#1
 1109  00001c74  17e0ff64	bnez	r31,L233_LF2
 1110  00001c78  54000000	nop; not filled.
 1111  00001c7c          	L246_LF2:
 1112  00001c7c  64a10000	snei	r1,r5,#0
 1113  00001c80  10200008	beqz	r1,L244_LF2
 1114  00001c84  54000000	nop; not filled.
 1115  00001c88  aca20000	sw	(r5),r2
 1116  00001c8c          	L244_LF2:
 1117  00001c8c  00600035	movi2fp	f0,r3
 1118  00001c90  00c00835	movi2fp	f1,r6
 1119  00001c94  0401000e	mult	f0,f0,f1
 1120  00001c98  00000834	movfp2i	r1,f0
 1121  00001c9c          	L245_LF2:
 1122  00001c9c  8fa20000	lw	r2,0(r29)
 1123  00001ca0  8fa30004	lw	r3,4(r29)
 1124  00001ca4  8fa40008	lw	r4,8(r29)
 1125  00001ca8  8fa5000c	lw	r5,12(r29)
 1126  00001cac  8fa60010	lw	r6,16(r29)
 1127  00001cb0  8fdffff8	lw	r31,-8(r30)
 1128  00001cb4  001ee820	add	r29,r0,r30
 1129  00001cb8  8fdefffc	lw	r30,-4(r30)
 1130  00001cbc  4be00000	jr	r31
 1131  00001cc0  54000000	nop
 1132  00001cc4          	.endproc _dstrtol
 1133  00001cc4          	.align 2
 1134  00001cc4          	.proc _bcopy
 1135  00001cc4          	.global _bcopy
 1136  00001cc4          	_bcopy:
 1137                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 1138  00001cc4  afbefffc	sw	-4(r29),r30; push fp
 1139  00001cc8  001df020	add	r30,r0,r29; fp = sp
 1140  00001ccc  afbffff8	sw	-8(r29),r31; push ret addr
 1141  00001cd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1142  00001cd4  afa20000	sw	0(r29),r2
 1143  00001cd8  afa30004	sw	4(r29),r3
 1144  00001cdc  afa40008	sw	8(r29),r4
 1145  00001ce0  8fc30000	lw	r3,(r30)
 1146  00001ce4  8fc20004	lw	r2,4(r30)
 1147  00001ce8  8fdf0008	lw	r31,8(r30)
 1148  00001cec  08000014	j	L259_LF2
 1149  00001cf0  54000000	nop; not filled.
 1150  00001cf4          	L257_LF2:
 1151  00001cf4  80640000	lb	r4,(r3)
 1152  00001cf8  a0440000	sb	(r2),r4
 1153  00001cfc  20630001	addi	r3,r3,#1
 1154  00001d00  20420001	addi	r2,r2,#1
 1155  00001d04          	L259_LF2:
 1156  00001d04  001f0820	add	r1,r0,r31
 1157  00001d08  23ffffff	addi	r31,r31,#-1
 1158  00001d0c  6c210000	sgti	r1,r1,#0
 1159  00001d10  1420ffe0	bnez	r1,L257_LF2
 1160  00001d14  54000000	nop; not filled.
 1161  00001d18  8fa20000	lw	r2,0(r29)
 1162  00001d1c  8fa30004	lw	r3,4(r29)
 1163  00001d20  8fa40008	lw	r4,8(r29)
 1164  00001d24  8fdffff8	lw	r31,-8(r30)
 1165  00001d28  001ee820	add	r29,r0,r30
 1166  00001d2c  8fdefffc	lw	r30,-4(r30)
 1167  00001d30  4be00000	jr	r31
 1168  00001d34  54000000	nop
 1169  00001d38          	.endproc _bcopy
 1170  00001d38          	.align 2
 1171  00001d38          	.proc _bzero
 1172  00001d38          	.global _bzero
 1173  00001d38          	_bzero:
 1174                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 1175  00001d38  afbefffc	sw	-4(r29),r30; push fp
 1176  00001d3c  001df020	add	r30,r0,r29; fp = sp
 1177  00001d40  afbffff8	sw	-8(r29),r31; push ret addr
 1178  00001d44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1179  00001d48  afa20000	sw	0(r29),r2
 1180  00001d4c  afa30004	sw	4(r29),r3
 1181  00001d50  8fc20000	lw	r2,(r30)
 1182  00001d54  8fdf0004	lw	r31,4(r30)
 1183  00001d58  08000010	j	L270_LF2
 1184  00001d5c  54000000	nop; not filled.
 1185  00001d60          	L268_LF2:
 1186  00001d60  20030000	addi	r3,r0,(#0x0)&0xff
 1187  00001d64  a0430000	sb	(r2),r3
 1188  00001d68  20420001	addi	r2,r2,#1
 1189  00001d6c          	L270_LF2:
 1190  00001d6c  001f0820	add	r1,r0,r31
 1191  00001d70  23ffffff	addi	r31,r31,#-1
 1192  00001d74  6c210000	sgti	r1,r1,#0
 1193  00001d78  1420ffe4	bnez	r1,L268_LF2
 1194  00001d7c  54000000	nop; not filled.
 1195  00001d80  8fa20000	lw	r2,0(r29)
 1196  00001d84  8fa30004	lw	r3,4(r29)
 1197  00001d88  8fdffff8	lw	r31,-8(r30)
 1198  00001d8c  001ee820	add	r29,r0,r30
 1199  00001d90  8fdefffc	lw	r30,-4(r30)
 1200  00001d94  4be00000	jr	r31
 1201  00001d98  54000000	nop
 1202  00001d9c          	.endproc _bzero
 1203                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1204                      ;;;
 1205                      ;;; Most of the traps are called in files from libtraps.
 1208  00001d9c          	.align 2
 1209  00001d9c          	.proc _exit
 1210  00001d9c          	.global _exit
 1211  00001d9c          	_exit:
 1212  00001d9c  44000300	trap	#0x300
 1213  00001da0  4be00000	jr	r31
 1214  00001da4  54000000	nop
 1215  00001da8          	.endproc _exit
 1217                      ; for the benefit of gcc.
 1218  00001da8          	.proc ___main
 1219  00001da8          	.global ___main
 1220  00001da8          	___main:
 1221  00001da8  4be00000	jr	r31
 1222  00001dac  54000000	nop
 1223  00001db0          	.endproc ___main
 1224  00001db0          	.text
 1225  00001db0          	.global _etext
 1226  00001db0          	_etext:
 1227  00001db0          	.align 3
 1228  00001db0          	.data
 1229  0000203b          	.global _edata
 1230  0000203b          	_edata:
